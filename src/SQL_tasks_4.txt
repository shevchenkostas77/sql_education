1. Используя функции, получите список всех сотрудников у которых в
имени есть буква 'b' (без учета регистра).
Решение:
select *
from hr.employees
where INSTR(LOWER(first_name), 'b') > 0;

2. Используя функции, получите список всех сотрудников у которых в
имени содержатся минимум 2 буквы 'a'.
Решение:
select *
from hr.employees
where INSTR(LOWER(first_name), 'a', 1, 2) > 0;

3. Получите первое слово из имени департамента, для тех
департаментов, у которых название состоит больше, чем из одного
слова.
Решение:
select department_name, SUBSTR(department_name, 1, INSTR(department_name, ' ') - 1)
from hr.departments
WHERE INSTR(department_name, ' ') > 0;

4. Получите имена сотрудников без первой и последней буквы в имени.
Решение:
select first_name,
SUBSTR(first_name, 2, LENGTH(first_name) - 2)
from hr.employees;

5. Получите список всех сотрудников, у которых в значении job_id после
знака '_' как минимум 3 символа, но при этом это значение после '_' не
равно 'CLERK'.
Решение:
select *
from hr.employees
where SUBSTR(job_id, INSTR(job_id, '_') + 1) != 'CLERK'
AND LENGTH(SUBSTR(job_id, INSTR(job_id, '_') + 1)) >= 3;

6. Получите список всех сотрудников, которые пришли на работу в
первый день любого месяца.
Решение:
select *
from hr.employees
where TO_CHAR(hire_date, 'DD') = '01';

7. Получите список всех сотрудников, которые пришли на работу в
2008-ом году.
Решение:
select *
from hr.employees
where TO_CHAR(hire_date, 'YYYY') = '2008';

8. Покажите завтрашнюю дату в формате:
Tomorrow is Second day of January
Решение:
select TO_CHAR(SYSDATE + 1, 'fm"Tomorrow is" DdSPTH "day of" Month') as tomorrow
from dual;

9. Выведите имя сотрудника и дату его прихода на работу в формате:
21st of June, 2007
Решение:
select first_name, hire_date,
TO_CHAR(hire_date, 'fmddth "of" Month"," YYYY')
from hr.employees;

10.Получите список работников с увеличенными зарплатами на 20%.
Зарплату показать в формате: $28,800.00
Решение:
select first_name,
TO_CHAR(salary + salary * 0.20, '$99,999.00') as new_salary
from hr.employees;

11.Выведите актуальную дату (нынешнюю), + секунда, + минута, + час, +
день, + месяц, + год. (Всё это по отдельности прибавляется к
актуальной дате).
Решение:
select TO_CHAR(SYSDATE, 'fmdd-Month-RR hh24:mi:ss') as today,
     TO_CHAR(SYSDATE + 1/24/60/60, 'fmdd-Month-RR hh24:mi:ss') as plus_second,
     TO_CHAR(SYSDATE + 1/24/60, 'fmdd-Month-RR hh24:mi:ss') as plus_minute,
     TO_CHAR(SYSDATE + 1/24, 'fmdd-Month-RR hh24:mi:ss') as plus_hour,
     TO_CHAR(SYSDATE + 1, 'fmdd-Month-RR hh24:mi:ss') as plus_day,
     TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'fmdd-Month-RR hh24:mi:ss)') as plus_month,
     TO_CHAR(SYSDATE + 365, 'fmdd-Month-RR hh24:mi:ss') as plus_year
from dual;

12.Выведите имя сотрудника, его з/п и новую з/п, которая равна старой
плюс это значение текста «$12,345.55».
Решение:
select first_name, salary, TO_NUMBER('$12,345.55', '$99,999.99') + salary as new_salary
from hr.employees;

13.Выведите имя сотрудника, день его трудоустройства, а также
количество месяцев между днём его трудоустройства и датой, которую
необходимо получить из текста «SEP, 18:45:00 18 2009».
Решение:
select first_name, hire_date,
ROUND(MONTHS_BETWEEN(TO_DATE('SEP, 18:45:00 18 2009', 'MON, hh24:mi:ss dd YYYY'), hire_date))
from hr.employees;

14.Выведите имя сотрудника, его з/п, а также полную з/п (salary +
commission_pct(%)) в формате: $24,000.00 .
Решение:
select first_name, salary, commission_pct,
TO_CHAR(salary + salary * NVL(commission_pct, 0), '$99,999,999.00')
from hr.employees;

15.Выведите имя сотрудника, его фамилию, а также выражение «different
length», если длина имени не равна длине фамилии или выражение
«same length», если длина имени равна длине фамилии. Не
используйте conditional functions.
Решение:
select first_name, last_name,
NVL2(NULLIF(LENGTH(first_name), LENGTH(last_name)), 'different length', 'same length')
from hr.employees;

16.Выведите имя сотрудника, его комиссионные, а также информацию о
наличии бонусов к зарплате – есть ли у него комиссионные (Yes/No).
Решение:
select first_name, commission_pct,
NVL2(commission_pct, 'YES', 'NO')
from hr.employees;

17.Выведите имя сотрудника и значение которое его будет
характеризовать: значение комиссионных, если присутствует, если нет,
то id его менеджера, если и оно отсутствует, то его з/п.
Решение:
select first_name, COALESCE(commission_pct, manager_id, salary)
from hr.employees;

18.Выведите имя сотрудника, его з/п, а также уровень зарплаты каждого
сотрудника: Меньше 5000 считается Low level, Больше или равно 5000
и меньше 10000 считается Normal level, Больше или равно 10000
считается High level.
Решение:
select first_name, salary,
     CASE
         WHEN salary < 5000 THEN 'Low level'
         WHEN salary >= 5000 AND salary < 10000 THEN 'Normal level'
         WHEN salary >= 10000 THEN 'High level'
     END
         as SALARY_LEVEL
from hr.employees;

19.Для каждой страны показать регион, в котором она находится: 1-
Europe, 2-America, 3-Asia, 4-Africa . Выполнить данное задание, не
используя функционал JOIN. Используйте DECODE.
Решение:
select country_name, region_id,
        DECODE (region_id,
                1, 'Europe',
                2, 'America',
                3, 'Asia',
                4, 'Africa',
                'Unknown')
            as regions
from hr.countries;

20.Задачу №19 решите используя CASE.
Решение:
select country_name,
        CASE region_id
            WHEN 1 THEN 'Europe'
            WHEN 2 THEN 'America'
            WHEN 3 THEN 'Asia'
            WHEN 4 THEN 'Africa'
            ELSE 'Unknown'
        END as regions
from hr.countries;

21.Выведите имя сотрудника, его з/п, а также уровень того, насколько у
сотрудника хорошие условия :
 - BAD: з/п меньше 10000 и отсутствие комиссионных;
 - NORMAL: з/п между 10000 и 15000 или, если присутствуют комиссионные;
 - GOOD: з/п больше или равна 15000.
Решение:
select first_name, salary,
        CASE
            WHEN salary < 10000 AND commission_pct is null THEN 'BAD'
            WHEN salary BETWEEN 10000 AND 15000 OR commission_pct is not null THEN 'NORMAL'
            WHEN salary >= 15000 THEN 'GOOD'
        END
            WORKING_CONDITIONS
from hr.employees;
